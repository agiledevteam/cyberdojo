
MAJOR
-----
I need an automated process that moves dojos that have
a minimum number of traffic lights and are at least N days
old onto a separate server (or at the very minimum
into a separate folder on the same server.) Or simply deletes them.
But ideally, one that has a list of id's not to delete (eg the
refactoring dojo's ids). This is not currently a problem as I've
moved the katas/ folder on cyber-dojo.com to a different partition
but that simply delays the problem. I've run out of inodes twice
before. 
-----
Sandboxes could be retained across run-test submissions.
This would allow, for example, incremental makes.
I've prepared this my making the sandboxes/ subfolder be simply the
dojo id concatenated with the animal name. Of course the sub-folder
would not be deleted. This would mean I would need to move the sandboxes
folder onto the large partition on cyber-dojo.com
I would also need some kind of harvester that reclaimed old sandboxes.
Eg if sandboxes/X exists but katas/X does not (eg because it has been pruned)
then I can delete sandboxes/X
-----
Ensuring cyber-dojo.sh cleans up any processes is messy. Instead of
trying to find children by walking pid/ppid hierarchy it would be
better to use pgid - process group. See lib/Files.rb
Note, if you're running under apache then this never seems to be
a problem - does apache auto clean processes?
-----
The Diff view doesn't work properly in IE8.
-----
Do I need to do io_locks? Suppose there is a conflict. Could this
simply mean the git commit fails with a merge conflict? I think
not, since at the moment the avatar/sandbox folder is deleted
before each commit. But if a merge conflict could be created it
would open up the possibility of having multiple players all
playing as the same avatar. There could also be conflicts in the
sandbox where the tests are run. Perhaps that is the place to
check for conflicts?



MINOR
-----
it might be better if the dialog box showing a players animal
  appeared after the edit-test page appeared rather than before.
-----
in the diff view, long lines get truncated rather than bringing up
  a scroll bar
-----
when you're looking at a diff-view filename=F, tag=N and you move
to tag=N+1 the selected file should stay at F (if it still exists
at tag N+1). Extra feature would be to detect it has been renamed
and to move to the renamed file.
-----
ability to revert to files from a previous traffic-light by clicking
  the traffic-light from within the edit-test page.
-----
add help button (screen cast?) for diff page
-----
add help button (screen cast?) for dashboard page
-----
I'd like the rightmost column of avatar images on the dashboard
  to not scroll off screen. But at the same time I'd also like
  the time-moving traffic-lights to update (to the avatar image's
  left) every 10 seconds.
-----
allow initial manifest.rb setup of initial exercise/language to
  contain subfolders. Do I need this? Could it already be done
  with links? 
-----
once a dojo has been created it should be independent of the
  initial exercise and language filesets it was created from.
  For example, you should be able to rename a languages sub-folder
  and a dojo created from it before the rename should be ok.
-----
old increments.rb files could have inc[:outcome] translated into inc[:colour]
  so traffic-light images work. Probably not worth doing. Gives an
  impression dojos will be retained for long periods of time which is
  not an impression I want to give.
-----
the use of the sandbox folder under the animals folder could probably be dropped
  now that the execution of cyber-dojo.sh happens in a dedicated separate sandbox
  folder. Or perhaps not. The sandbox folder allows for admin files (such as the
  manifest and increments file) to live in avatar root with no possibility of
  such files interfering with the source files inside sandbox.
-----
sort filenames so filenames with no . in them are grouped together
  and filenames with one or more . in them are grouped together?
sort filenames so files with the same extension are grouped together?
-----
upon start-coding the server could run cyber-dojo.sh and open the output file in
  the editor? certainly I don't want the output file as the one opened at the
  start and its empty
-----
diff-filename-click cycles to the next diff but it loses the current red/green
  toggling states
-----
in diff page when you go back to a file with diff it should not cycle to next
  diff change it should only cycle to next diff change if you click the filename
  when the filename is already selected. 
-----
in firefox clicking on the ova hyperlink in the sources dialog doesn't start a download
-----
In lib/CodeOutputParser.rb...
if a player creates a cyber-dojo.sh file which runs two or more
test files then it's possible that the output will contain the
strings denoting red and green traffic-lights. Because of this the
regex's should test for a red traffic-light first, and for
a green traffic-light second.
Also CodeOutputParser.rb with its function parse() should be
renamed based on what it does from the outside rather than
from the inside - namely it simply determines the traffic
light colour. Maybe something like
module TrafficLight
  def self.colour(unit_test_framework, output)
    ...
  end
end
-----
the various uses of eval in the code could do with being replaced with
a json parse.
-----
The intention with the installation tests is that they are used to determine
what languages are installed and to only offer those languages (at the create
page). But at the moment all the languages are being offered.
-----
The javascript tests need some TLC.
-----
